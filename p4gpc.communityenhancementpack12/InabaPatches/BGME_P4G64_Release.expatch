const RANDOM_SONG_SIZE = 4
const BATTLE_BGM_SIZE = 8
const SHELL_SONG_ID = 58
const SHELL_POSITION_ID = 80
const SHELL_SONG_ID_2 = 61
const SHELL_POSITION_ID_2 = 82
const VICTORY_POSITION_ID = 35
var randomSongs(12) = bytes(0703090309030B030B030D03)
var battleBgms(1) = bytes(00)
var tvBgms(358) = bytes
var currentSongPosition(4) = 0
var songSwitchFlag(1) = 0
var battleCtxBgmType(1) = bytes(00)
var shellPositionPtr(8) = 0
var shellOriginalData(4) = 0
var victoryPositionPtr(8) = 0
var victoryPositionData(4) = 0
var currentPass(1) = 0
[patch BGME - Encounter BGM Patch]
pattern = 0F B7 4C D0 16
label start
mov r12, {currentPass}
cmp byte [r12], 0
movzx ecx, word ptr rax+rdx*0x8+0x6
movzx r12, byte [rax + rdx * 0x8 + 5]
je victoryMusicPass
movzx ecx, word ptr rax+rdx*0x8+0x16
movzx r12, byte [rax + rdx * 0x8 + 4]
label victoryMusicPass
label setupMusic
mov r13, {battleCtxBgmType}
cmp byte [r13], 0
je setupSong
movzx r12, byte [r13]
mov byte [r13], 0
label setupSong
cmp r12, 0
je bgmeOff
cmp r12, 3
jl randomSong
push rax
push rdx
mov rax, rcx
mov r12w, {BATTLE_BGM_SIZE}
mul r12w
mov r12, {battleBgms}
add r12, rax
movzx rax, word [r8 + 0x1e]
mov r13w, word [r12]
cmp rax, 2
je configReady
shr r13w, 2
cmp rax, 1
je configReady
shr r13w, 2
label configReady
and r13, 3
mov r14, {battleCtxBgmType}
mov byte [r14], r13b
mov r14, 2
mul r14
movzx r12d, word [r12 + rax + 2]
mov ecx, r12d
pop rdx
pop rax
jmp setupMusic
label randomSong
cmp r12, 2
jl playSong
push rax
push rdx
mov rax, {RANDOM_SONG_SIZE}
mul ecx
mov r12, {randomSongs}
add r12, rax
mov r13w, [r12 + 2]
mov r12w, [r12]
sub r13w, r12w
mov rax, 0x1451FE644
mov rax, [rax]
xor rdx, rdx
div r13w
add r12w, dx
movzx ecx, r12w
pop rdx
pop rax
label playSong
mov r9, 0x140BEAB30
mov r9, [r9]
mov r9, [r9+0x708]
mov r9, [r9+0x7f8]
mov r9, [r9+0x7c8]
mov r9, [r9+0x90]
add r9, 1758
push rax
push rdx
xor rax, rax
mov eax, ecx
mov r13d, ecx
mov ecx, 4
mul ecx
add rax, r9
mov ecx, [rax]
mov r12, {currentPass}
cmp byte [r12], 0
jne encounterPass
add r9, {VICTORY_POSITION_ID} * 4
mov rdx, {victoryPositionPtr}
cmp qword [rdx], 0
jne swapVictorySong
push r9
mov [rdx], r9
mov rdx, {victoryPositionData}
mov r9d, [r9]
mov [rdx], r9d
pop r9
label swapVictorySong
cmp r13d, {VICTORY_POSITION_ID}
mov [r9], ecx
jne victoryPassEnd
mov rdx, {victoryPositionData}
mov edx, dword [rdx]
mov [r9], edx
label victoryPassEnd
mov byte [r12], 1
pop rdx
pop rax
jmp start
label encounterPass
pop rdx
pop rax
mov r12, {currentPass}
mov byte [r12], 0
add r9, {SHELL_POSITION_ID} * 4
mov rdx, {shellPositionPtr}
cmp qword [rdx], 0
jne swapSongs
push r9
mov [rdx], r9
mov rdx, {shellOriginalData}
mov r9d, [r9]
mov [rdx], r9d
pop r9
label swapSongs
mov [r9], ecx
mov edx, {SHELL_SONG_ID}
label functionEnd
mov r9, 0x1400bc6fd
jmp r9
label bgmeOff
mov r12, {currentPass}
mov byte [r12], 0
mov rdx, {shellPositionPtr}
mov rdx, [rdx]
cmp qword rdx, 0
je original
mov r9, {shellOriginalData}
mov r9d, [r9]
mov [rdx], r9d
label original
add ecx, -2
[patch BGME - TV World BGM]
pattern = 83 FF 05 0F 8E C1 00 00 00
order = before
push rax
xor rax, rax
mov rax, 2
mul edi
mov r9, {tvBgms}
add rax, r9
movzx rax, word [rax]
mov r9, 0x140BEAB30
mov r9, [r9]
mov r9, [r9+0x708]
mov r9, [r9+0x7f8]
mov r9, [r9+0x7c8]
mov r9, [r9+0x90]
add r9, 1758
mov edx, 4
mul edx
add rax, r9
mov edx, [rax]
mov r10, {currentSongPosition}
cmp [r10], edx
mov r10, {songSwitchFlag}
je setupSong
cmp byte [r10], 0
mov byte [r10], 1
je setupSong
mov byte [r10], 0
label setupSong
cmp byte [r10], 1
je shellSong2
add r9, {SHELL_POSITION_ID} * 4
mov [r9], edx
mov r10, {currentSongPosition}
mov [r10], edx
mov ebx, {SHELL_SONG_ID}
jmp endFunction
label shellSong2
add r9, {SHELL_POSITION_ID_2} * 4
mov [r9], edx
mov r10, {currentSongPosition}
mov [r10], edx
mov ebx, {SHELL_SONG_ID_2}
label endFunction
pop rax
mov r9, 0x14031525D
jmp r9
[patch BGME - cmmEventBGM.dat Patch]
pattern = 48 8D 64 24 F8 41 53 4C 8D 5C 24 08 49 81 C3 93 4B 37 13
order = before
cmp eax, 64
jl endFunction
push r9
mov r9, 0x140BEAB30
mov r9, [r9]
mov r9, [r9+0x708]
mov r9, [r9+0x7f8]
mov r9, [r9+0x7c8]
mov r9, [r9+0x90]
add r9, 1758
mov edx, 4
mul edx
add rax, r9
mov edx, [rax]
add r9, {SHELL_POSITION_ID} * 4
mov [r9], edx
mov edx, {SHELL_SONG_ID}
pop r9
label endFunction
[patch BGME - Event BGM Patch]
pattern = 0F BF 5F 12
order = after
cmp ebx, 64
jng functionEnd
mov r9, 0x140BEAB30
mov r9, [r9]
mov r9, [r9+0x708]
mov r9, [r9+0x7f8]
mov r9, [r9+0x7c8]
mov r9, [r9+0x90]
add r9, 1758
push rax
xor rax, rax
mov eax, ebx
mov ebx, 4
mul ebx
add rax, r9
mov ebx, [rax]
pop rax
mov r10, {currentSongPosition}
cmp [r10], ebx
mov r10, {songSwitchFlag}
je setupSong
cmp byte [r10], 0
mov byte [r10], 1
je setupSong
mov byte [r10], 0
label setupSong
cmp byte [r10], 1
je shellSong2
add r9, {SHELL_POSITION_ID} * 4
mov [r9], ebx
mov r10, {currentSongPosition}
mov [r10], ebx
mov ebx, {SHELL_SONG_ID}
jmp functionEnd
label shellSong2
add r9, {SHELL_POSITION_ID_2} * 4
mov [r9], ebx
mov r10, {currentSongPosition}
mov [r10], ebx
mov ebx, {SHELL_SONG_ID_2}
label functionEnd
